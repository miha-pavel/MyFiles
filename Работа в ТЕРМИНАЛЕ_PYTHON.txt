										*PYTHON*
										********
										
============================================================================================
										Адреса
										------
...
============================================================================================
python3 --version				- запрашиваем рабочую версию питона
sudo apt-get install idle3		- устанавливаем стандартный редактор Питона 3

============================================================================================
============================================================================================
										*DJANGO*
										********

============================================================================================
						УСТАНОВКА ДЖАНГО:
						-----------------
Устанавливаем PIP:
для python2
	`sudo apt install python-pip`
для python3
	`sudo apt install python3-pip`
Устанавливаем джанго:
для python2
	`pip install django`
для python3
	`pip3 install django`
Вам следует рассмотреть возможность обновления через
для python2
	`pip install --upgrade pip`
для python3
	`pip3 install --upgrade pip`
Устанавливаем приложениея-пакет
	pip install <package_name>	например, django-filter
Устанавливаем приложениея-пакет
	pip uninstall <package_name>
============================================================================================
						Обновление версии ДЖАНГО до последнего релиса:
						----------------------------------------------
Проверить версию ДЖАНГО
	python -c "import django; print(django.get_version())"
Обновляем версию ДЖАНГО до последнего релиса
	pip install -U django
============================================================================================
						Локальное создание нового проэкта ДЖАНГО:
						-----------------------------------------

У вас будет два проекта
	mkdir project1
	mkdir project2

В первом проекте окружение будет называться `venv` во втором `venv2`

	cd project1
	sudo apt install virtualenv			- установка вертуальной среды
	virtualenv venv -p /usr/bin/python3
	. venv/bin/activate
	pip install django
	django-admin startproject hello
	python manage.py runserver			- запуск виртуального сервера
	deactivate							- отключили виртуальное окружение
	cd ..								- перешли на директорию выше, в `home/pavel/projects`
............................................................................................
	cd project2
	virtualenv venv2 -p /usr/bin/python3
	. venv2/bin/activate
	pip install flask
	deactivate							- отключили виртуальное окружение
	cd ..								- перешли на директорию выше, в `home/pavel/projects`

--------------------------------------------------------------------------------------------
Добовляем в проэкт ПРИЛОЖЕНИЕ с именем <polls>
	python manage.py startapp <polls>
	
--------------------------------------------------------------------------------------------
Создание суперпользователя
	python3 manage.py createsuperuser
--------------------------------------------------------------------------------------------
Устанавливаем Linter Flake8
	pip install flake8
	pip install flake8-docstrings (деинстоляция pip uninstall flake8-docstrings)
============================================================================================
============================================================================================
							*Подготовка requirements.txt*
							*****************************

Если надо посмотреть какие библиотеки загружены в проект через PIP
	pip3 freeze
------------------------------------------------------------------
Отправляем список приложений pip в файл requirements.txt
	pip3 freeze > requirements.txt
------------------------------------------------------------------
Установка указанных зависимостей осуществляется из консоли, с помощью следующей команды
	pip install -r requirements.txt
============================================================================================
============================================================================================
							*Работа с миграциями*
							*********************

-Выполним миграцию makemigrations приложения "polls"
	python manage.py makemigrations polls
	python manage.py makemigrations polls -n "add_discount_model"	исключаем автоимя, и вставляем свое
	python manage.py migrate
Выполняя makemigrations, вы говорите Django, что внесли некоторые изменения в ваши модели
(в нашем случае мы создали несколько новых) и хотели бы сохранить их в миграции.
--------------------------------------------------------------------------------------------
		сносим старые миграции и выполняем новые
		----------------------------------------
-удоляем старую базу данных
	rm -f tmp.db db.sqlite3
-выполняем откат до первоначальной миграции, это делаеться для того чтобы удолить все записи о миграциях в базе данных
	python manage.py migrate name_app zero
-удоляем старые миграции
	rm -r name_app/migrations
-выполняем новые миграции
	python manage.py makemigrations name_app
	python manage.py migrate
--------------------------------------------------------------------------------------------
		Откат до нужного номера миграции
		--------------------------------
-откатываемся до необходимой миграции
	./manage.py migrate <name_app> 0002
-удоляем старые миграции прямо в папке до миграции 0002 (если необходимо)
============================================================================================
============================================================================================
							*Перевод текста*
							****************
							
	Выполняем перевод текста для руских страниц в джанго и для украинских
	---------------------------------------------------------------------
-Записали текст на базовом языке(укринский)
-Заходим в приложение где была выполнена запись
	cd shop
-Заносим в базу данных сообщений сообщение которое надо перевесте с указание на какой язык
 надо перевести строчку (команда находит все не переведенные строчки и автоматически заносит
 в базу)
	django-admin makemessages -l ru
-Заходим в файл базы данных находим внесенную только что строчку и пропечатываем ее перевод
-Компилируем перевод строчки
	django-admin compilemessages
============================================================================================
============================================================================================
							*Пошаговая отладка процессов Python*
							************************************
	
import ipdb; ipdb.set_trace()
============================================================================================
============================================================================================
							*Django reCAPTCHA*
							******************
Запрос на Google "RECAPTCHA для django"
https://github.com/praekelt/django-recaptcha
https://pythoness.pp.ua/catalog/article/prostaya-captcha-dlya-django-prilozheniya/
http://night-fairy-tales.com/2009/05/captcha-django.html

Устанавливаем django-recaptcha
	pip install django-recaptcha
============================================================================================
============================================================================================
							*Установка Pillow*
							******************
Установка Pillow 
	sudo apt-get install python3-dev python3-setuptools
	pip3 install pillow
============================================================================================
============================================================================================
							*Вызов консоли*
							***************	
	
./manage.py shell